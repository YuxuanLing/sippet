{"name":"Sippet","tagline":"C++ SIP stack based on Chromium source code","body":"# sippet\r\n\r\nThis C++ library has been designed as a Chromium SIP stack.\r\n\r\n**Current status**: Work-in-progress\r\n\r\nSippet is an open-source SIP User-Agent library, compliant with the IETF [RFC\r\n3261](https://www.ietf.org/rfc/rfc3261.txt) specification. It can be used as a\r\nbuilding block for SIP client software for uses such as VoIP, IM, and many\r\nother real-time and P2P communication services.\r\n\r\nThe main target was to enable Javascript applications to use UDP, TCP and TLS\r\ntransports along [WebSocket](http://en.wikipedia.org/wiki/WebSocket). Existing\r\nSIP solutions for the browser are forced to use the\r\n[WebSockets API](http://www.w3.org/TR/2011/WD-websockets-20110419/) to\r\nsend/receive SIP messages. But for many service providers, the WebSocket\r\nprotocol could not be a feasible solution due to scalability, support and other\r\nbusiness constraints.\r\n\r\nBy the way, the stack can be used as a full client-side C++ Stack\r\n(full-featured) without Javascript integration.\r\n\r\n# Features\r\n\r\n* Support to symmetric response routing (RFC 3581).\r\n* Support to client-initiated connections (RFC 5626).\r\n* Multiplatform: same platforms supported by Chromium.\r\n* Parsing of SIP and Tel URIs, compatible with GURL.\r\n* TODO: Websockets, just in case.\r\n* [SOCKS](http://en.wikipedia.org/wiki/SOCKS) for stream-oriented connections,\r\n  inherited from system settings.\r\n* Pass-through HTTP proxies using CONNECT (SIP over HTTP proxies).\r\n* Flexible SSL/TLS support (client-side certificates, restrict or relaxed cipher list).\r\n\r\n# Fun stuff\r\n\r\n* Added G.729 support to WebRTC: use at your own risk, you have to pay\r\nroyalties if you want to use this codec commercially.\r\n  * The source code is now based on ITU-T release of October 2006, and include\r\n    some optimizations provided by the WebRTC signal processing library.\r\n    Several optimizations available in other source codes (such as\r\n    [CSipSimple](https://code.google.com/p/csipsimple/) and\r\n    [Siphon](https://code.google.com/p/siphon/)) were discarded as they don't\r\n    consider saturation. Precision was considered more important than\r\n    optimization in this derived work.\r\n* Created a 'compatibility mode' for WebRTC, so it can negotiate media without\r\nsupporting SRTP/DTLS and ICE.\r\n","google":"UA-41644078-1","note":"Don't delete this file! It's used internally to help with page regeneration."}